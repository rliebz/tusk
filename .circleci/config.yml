defaults:
  # Common
  job_defaults: &job_defaults
    working_directory: /go/src/github.com/rliebz/tusk
    docker:
      - image: tuskcli/ci:latest
    environment: &environment_defaults
      TEST_RESULTS: /tmp/test-results
  job_dry_run: &job_dry_run
    <<: *job_defaults
    environment:
      <<: *environment_defaults
      RELEASE_FLAGS: --snapshot
  mktestdir: &mktestdir
    name: Create the test directory
    command: mkdir -p $TEST_RESULTS
  install_tusk: &install_tusk
    name: Install the application
    command: |
      go get -u github.com/golang/dep/cmd/dep
      dep ensure
      go install
  store_artifacts: &store_artifacts
    path: /tmp/test-results
    destination: raw-test-output
  store_test_results: &store_test_results
    path: /tmp/test-results

  lint: &lint
    name: Run gometalinter
    command: tusk --quiet lint | tee $TEST_RESULTS/gometalinter.out

  test: &test
    name: Run go test
    command: |
      trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
      tusk --quiet test --verbose --no-lint | tee $TEST_RESULTS/go-test.out

  release: &release
    name: Run goreleaser
    command: |
      # Pin goreleaser version
      VERSION=v0.62.3 tusk release ${RELEASE_FLAGS}

version: 2
jobs:
  # For running tests locally
  build:
    <<: *job_dry_run
    steps:
      - checkout
      - run: *mktestdir
      - run: *install_tusk
      - run: *lint
      - run: *test
      # Local release is dry-run only
      - run: *release

  lint:
    <<: *job_defaults
    steps:
      - checkout
      - run: *mktestdir
      - run: *install_tusk
      - run: *lint
      - store_artifacts: *store_artifacts
      - store_test_results: *store_test_results

  test:
    <<: *job_defaults
    steps:
      - checkout
      - run: *mktestdir
      - run: *install_tusk
      - run: *test
      - store_artifacts: *store_artifacts
      - store_test_results: *store_test_results

  release_dry_run:
    <<: *job_dry_run
    steps:
      - checkout
      - run: *install_tusk
      - deploy: *release

  release:
    <<: *job_defaults
    steps:
      - checkout
      - run: *install_tusk
      - deploy: *release

workflows:
  version: 2
  pipeline:
    jobs:
      - lint:
          filters:
            tags:
              only: /.*/
      - test:
          filters:
            tags:
              only: /.*/
      - release_dry_run:
          filters:
            tags:
              ignore: /v[0-9]+(\.[0-9]+)*(-.*)*/
      - release:
          requires:
            - lint
            - test
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
