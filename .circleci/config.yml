defaults:
  # Common
  test_defaults: &test_defaults
    environment: &environment_defaults
      TEST_RESULTS: /tmp/test-results
  mktestdir: &mktestdir
    name: Create the test directory
    command: mkdir -p $TEST_RESULTS
  store_artifacts: &store_artifacts
    path: /tmp/test-results
    destination: raw-test-output
  store_test_results: &store_test_results
    path: /tmp/test-results

version: 2
jobs:
  lint:
    <<: *test_defaults
    docker:
      - image: golangci/golangci-lint:v1.39-alpine
    steps:
      - checkout
      - run: *mktestdir
      - run:
          name: Run golangci-lint
          command: golangci-lint run | tee $TEST_RESULTS/golangci-lint.out
      - store_artifacts: *store_artifacts
      - store_test_results: *store_test_results

  test:
    <<: *test_defaults
    docker:
      - image: circleci/golang:1.16.3
    steps:
      - checkout
      - run: *mktestdir
      - run:
          name: Run go test
          command: |
            PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
            gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- $PACKAGE_NAMES
      - store_artifacts: *store_artifacts
      - store_test_results: *store_test_results

  release_dry_run:
    docker:
      - image: goreleaser/goreleaser:v0.163.1
    steps:
      - checkout
      - deploy:
          name: Dry run goreleaser
          command: |
            header='^## [0-9]+\.[0-9]+\.[0-9]+'
            awk "/${header}/{if(!found){found=1;f=1}else{f=0}} f" CHANGELOG.md |
                goreleaser --rm-dist --release-notes /dev/stdin --snapshot

  release:
    docker:
      - image: goreleaser/goreleaser:v0.163.1
    steps:
      - checkout
      - deploy:
          name: Run goreleaser
          command: |
            header='^## [0-9]+\.[0-9]+\.[0-9]+'
            awk "/${header}/{if(!found){found=1;f=1}else{f=0}} f" CHANGELOG.md |
                goreleaser --rm-dist --release-notes /dev/stdin

  publish_docs_dry_run:
    docker:
      - image: python:3.9-slim
    steps:
      - checkout
      - run:
          name: Install mkdocs
          command: pip3 install mkdocs==1.1.2
      - deploy:
          name: Run mkdocs build
          command: mkdocs build

  publish_docs:
    docker:
      - image: python:3.9-slim
    steps:
      - add_ssh_keys:
          fingerprints:
            - "33:53:3f:55:d6:d4:21:9c:88:29:5b:c6:c3:ee:b3:af"
      - checkout
      - run:
          name: Install git
          command: apt update && apt install -y git
      - run:
          name: Install mkdocs
          command: pip3 install mkdocs==1.1.2
      - deploy:
          name: Run mkdocs deploy
          command: mkdocs gh-deploy

workflows:
  version: 2
  pipeline:
    jobs:
      - lint:
          filters:
            tags:
              only: /.*/
      - test:
          filters:
            tags:
              only: /.*/
      - release_dry_run:
          filters:
            tags:
              ignore: /v[0-9]+(\.[0-9]+)*(-.*)*/
      - publish_docs_dry_run:
          filters:
            tags:
              ignore: /v[0-9]+(\.[0-9]+)*(-.*)*/
      - release:
          requires:
            - lint
            - test
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
      - publish_docs:
          requires:
            - release
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
