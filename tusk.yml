---
tasks:
  bootstrap:
    usage: Set up app dependencies for first time use
    description: |
      Install all dependencies for building, formatting, and testing the
      application.
    options:
      bin-dir:
        usage: The location for binary files. Defaults to /usr/local/bin
        default: /usr/local/bin
      golangci-url:
        private: true
        default: https://install.goreleaser.com/github.com/golangci/golangci-lint.sh
      golangci-version:
        private: true
        default: 1.17.1
    run:
      - when:
          command: golangci-lint --version | grep -qv ${golangci-version}
        command: curl -fLSs ${golangci-url} | bash -s -- -b ${bin-dir} v${golangci-version}
      - when:
          command: "! command -v goimports"
        command: GO111MODULE=off go get golang.org/x/tools/cmd/goimports
      - when:
          command: '! command -v circleci'
        command: curl -fLSs https://circle.ci/cli | DESTDIR=${bin-dir} bash

  lint:
    usage: Run static analysis
    description: |
      Runs golangci-lint using the configuration specified in .golangci.toml
    options:
      fast:
        usage: Only run fast linters
        type: bool
        short: f
      opts:
        private: true
        default:
          when: fast
          value: --fast
    run: golangci-lint run ${opts} ./...

  test:
    usage: Run the tests
    description: |
      Runs the full test suite using `go test -cover ./...`.
    options:
      all:
        usage: Run all tests and linters
        short: a
        type: bool
        default: false
      fast:
        usage: Only run fast tests
        type: bool
      verbose:
        usage: Run the tests in verbose mode
        short: v
        type: bool
      verbose-string:
        private: true
        default:
          when: verbose
          value: -v
      short-string:
        private: true
        default:
          when: fast
          value: -short
    run:
      - when: all
        task:
          name: lint
          options:
            fast: ${fast}
      - command: go test -cover -race ${verbose-string} ${short-string} ./...

  tidy:
    usage: Clean up and format the repo
    run:
      - go mod tidy
      - goimports -w .

  circleci:
    usage: Run the circleci build locally
    description: |
      Alternative to `tusk test --all`.

      Run the local build using the CircleCI command-line tool. This will spin
      up a docker container locally and run linters and tests in an environment
      that more closely resembles the pipeline run on CircleCI, but is not
      easily configurable.

      Requires docker to be running locally.
    run: circleci local execute --job local

  release:
    usage: Release the latest version with goreleaser
    options:
      snapshot:
        usage: Release without publishing or validation
        type: bool
      snapshot-flags:
        private: true
        default:
          when: snapshot
          value: --snapshot
    run: |
      header='^## [0-9]+\.[0-9]+\.[0-9]+'
      awk "/${header}/{if(!found){found=1;f=1}else{f=0}} f" CHANGELOG.md |
          goreleaser --rm-dist --release-notes /dev/stdin ${snapshot-flags}
