# yaml-language-server: $schema=tusk.schema.yaml
---
tasks:
  lint:
    usage: Run static analysis
    description: |
      Run golangci-lint using the project configuration.
    options:
      fast:
        usage: Only run fast linters
        type: bool
        short: f
        rewrite: --fast
    run: go run github.com/golangci/golangci-lint/cmd/golangci-lint@v1.55.2 run ${fast} ./...

  test:
    usage: Run the tests
    description: |
      Runs the full test suite using `go test -cover ./...`.
    options:
      all:
        usage: Run all tests and linters
        short: a
        type: bool
      fast:
        usage: Only run fast tests
        type: bool
        short: f
      fast-flag:
        private: true
        default:
          when: fast
          value: -short
      verbose:
        usage: Run the tests in verbose mode
        short: v
        type: bool
        rewrite: -v
    run:
      - when: all
        task:
          name: lint
          options:
            fast: ${fast}
      - command: go test -race ${fast-flag} ${verbose} ./...

  tidy:
    usage: Clean up and format the repo
    run:
      - go mod tidy
      - go run golang.org/x/tools/cmd/goimports@latest -w .

  generate:
    usage: Generate tusk.schema.json from tusk.schema.yaml
    run: go run ./schemagen

  release:
    usage: Release the latest version with goreleaser
    options:
      snapshot:
        usage: Release without publishing or validation
        type: bool
        rewrite: --snapshot
    run: |
      header='^## [0-9]+\.[0-9]+\.[0-9]+'
      awk "/${header}/{if(!found){found=1;f=1}else{f=0}} f" CHANGELOG.md |
          goreleaser --clean --release-notes /dev/stdin ${snapshot}
