# yaml-language-server: $schema=tusk.schema.yaml
---
tasks:
  lint:
    usage: Run static analysis
    options:
      fix:
        usage: Fix issues
        type: bool
        short: f
        rewrite: --fix
    run: golangci-lint run ${fix}

  test:
    usage: Run the tests
    options:
      all:
        usage: Run all tests and linters
        short: a
        type: bool
      race:
        usage: Enable the race detector
        short: r
        type: bool
        rewrite: -race
      verbose:
        usage: Run the tests in verbose mode
        short: v
        type: bool
        rewrite: -v
    run:
      - when: all
        task: lint
      - command: go test ${race} ${verbose} ./...
      - when: all
        task:
          name: release
          options:
            snapshot: true

  tidy:
    usage: Clean up and format the repo
    run:
      - go mod tidy
      - golangci-lint fmt

  generate:
    usage: Generate tusk.schema.json from tusk.schema.yaml
    source:
      - schemagen/**/*
      - tusk.schema.yaml
    target: tusk.schema.json
    run: go run ./schemagen

  release:
    usage: Release the latest version with goreleaser
    options:
      snapshot:
        usage: Release without publishing or validation
        type: bool
        rewrite: --snapshot
    run: |-
      header='^## [0-9]+\.[0-9]+\.[0-9]+'
      awk "/${header}/{if(!found){found=1;f=1}else{f=0}} f" CHANGELOG.md |
        goreleaser --clean --release-notes /dev/stdin ${snapshot}
