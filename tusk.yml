---
tasks:
  bootstrap:
    usage: Set up app dependencies for first time use
    description: |
      Install all dependencies for building and testing the application.
    run:
      - go get -u github.com/golang/dep/cmd/dep
      - dep ensure
      - go get -u github.com/alecthomas/gometalinter
      - gometalinter --install --update

  lint:
    usage: Run gometalinter for static analysis
    description: |
      Runs gometalinter using the configuration specified in .gometalinter.json.
    options:
      fast:
        usage: Only run fast linters
        type: bool
      opts:
        private: true
        default:
          when:
            equal: {fast: true}
          value: --fast
    run: gometalinter --config .gometalinter.json ${opts} ./...

  test:
    usage: Run go test and gometalinter
    description: |
      Runs the full test suite using `go test -cover ./...`. Also runs the
      linter by default, and linter errors are considered failed tests.
    options:
      fast:
        usage: Only run fast tests and linters
        type: bool
      no-lint:
        usage: Skip running gometalinter
        default: false
        type: bool
      verbose:
        usage: Run the tests in verbose mode
        short: v
        type: bool
      verbose-string:
        private: true
        default:
          when:
            equal: {verbose: true}
          value: -v
      short-string:
        private: true
        default:
          when:
            equal: {fast: true}
          value: -short
    run:
      - when:
          equal: {no-lint: false}
        task:
          name: lint
          options:
            fast: ${fast}
      - command: go test -cover -race ${verbose-string} ${short-string} ./...

  circleci:
    usage: Run the circleci build locally
    description: |
      Alternative to `tusk test`.

      Download the circleci agent if needed and run `circleci build`. This will
      spin up a docker container locally and run linters and tests in an
      environment that more closely resembles the pipeline run on CircleCI, but
      is not easily configurable.

      Requires docker to be running locally.
    options:
      bin-path:
        private: true
        default: /usr/local/bin/circleci
      download-path:
        private: true
        default: https://circle-downloads.s3.amazonaws.com/releases/build_agent_wrapper/circleci
      no-install:
        usage: Do not install the CLI locally if not already available
        type: bool
    run:
      - when:
          - not-equal: {no-install: true}
          - command: '! command -v circleci'
        command: curl -o ${bin-path} ${download-path} && chmod +x ${bin-path}
      - command: circleci build

  release:
    usage: Release the latest version with goreleaser
    options:
      goreleaser-bin:
        usage: The binary for goreleaser
        default: goreleaser
    run: |
      header='^## [0-9]+\.[0-9]+\.[0-9]+'
      awk "/${header}/{if(!found){found=1;f=1}else{f=0}} f" CHANGELOG.md |
          ${goreleaser-bin} --rm-dist --release-notes /dev/stdin
