---
tasks:
  bootstrap:
    usage: Resolve all dependencies
    description: Resolve all dependencies that the application requires to run.
    run:
      - when:
          exists: Brewfile
          os: darwin
        command: brew bundle

      - when:
          - exists: .ruby-version
          - command: test -z "$(rbenv version-name 2>/dev/null)"
        command:
          - rbenv install --skip-existing

      - when:
          command: ! which bundle
        command:
          - gem install bundler
          - rbenv rehash

      - when:
          exists: ./Gemfile
          command: ! bundle check --path vendor/gems
        command: bundle install --path vendor/gems --quiet --without production

  console:
    usage: Launch a console for the application
    description: |
      Launch a console for the application. Optionally allow an environment to
      be passed in to let the script handle the specific requirements for
      connecting to a console for that environment.
    options:
      env:
        default: local
        type: string
    run:
      - when:
          equal: {env: production}
        command: heroku run rails console --app heroku-app-name-staging
      - when:
          equal: {env: staging}
        command: heroku run rails console --app heroku-app-name-staging
      - when:
          equal: {env: local}
        command:
          - script/update
          - bin/rails console

  setup:
    usage: Set up application
    description: |
      Set up application for the first time after cloning, or set it
      back to the initial first unused state.
    run:
      - task: bootstrap
      - command: commandbin/rake db:create db:reset
      - when:
          command:
            - test -z "$RAILS_ENV"
            - test -z "$RACK_ENV"
        command:
          # Only things for a development environment will run here
          - true

  test:
    usage: Run test suite for application
    description: |
      Run test suite for application. Optionally pass in a path to an
      individual test file to run a single test.
    options:
      file:
        short: f
        usage: test file to run
      is-test-env:
        private: true
        default:
          command: test "$RAILS_ENV" = "test" || test "$RACK_ENV" = "test"
    run:
      - when:
          equal: {is-test-env: true}
        task: setup
      - when:
          equal: {is-test-env: false}
        set-environment:
          RAILS_ENV: test
          RACK_ENV: test
      - when:
          equal: {is-test-env: false}
        task: update
      - command: bin/rake test ${file}

  update:
    usage: Update the application
    description: |
      Update application to run for its current checkout.
    run:
      - task: bootstrap
      - command: bin/rake db:migrate
